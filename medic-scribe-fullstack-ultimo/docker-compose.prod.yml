services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: medical_scribe_api_prod
    env_file:
      - .env.prod
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
    volumes:
      - medic_scribe_audio:${UPLOAD_FOLDER:-/app/uploaded_audio}
      - medic_scribe_notes:${NOTES_FOLDER:-/app/generated_notes}
    networks:
      medic_scribe_network:
        ipv4_address: 172.20.0.10
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: medical_scribe_frontend_prod
    env_file:
      - .env.prod
    environment:
      - NODE_ENV=production
    networks:
      medic_scribe_network:
        ipv4_address: 172.20.0.20
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

  nginx:
    image: nginx:alpine
    container_name: medic_scribe_nginx_prod
    env_file:
      - .env.prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - letsencrypt_data:/etc/nginx/ssl:ro
      - certbot_data:/var/www/certbot:ro
    depends_on:
      - backend
      - frontend
    networks:
      medic_scribe_network:
        ipv4_address: 172.20.0.30
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'
        reservations:
          memory: 128M
          cpus: '0.05'

  certbot:
    image: certbot/certbot
    container_name: medic_scribe_certbot
    volumes:
      - letsencrypt_data:/etc/letsencrypt
      - certbot_data:/var/www/certbot
    env_file:
      - .env.prod
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${SSL_EMAIL:-admin@krakenanalitics.space} --agree-tos --no-eff-email -d ${DOMAIN:-scribe.krakenanalitics.space}
    restart: "no"

networks:
  medic_scribe_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

volumes:
  medic_scribe_audio:
    driver: local
  medic_scribe_notes:
    driver: local
  letsencrypt_data:
    driver: local
  certbot_data:
    driver: local
